# === Part (c): OLS Regression Replication ===
import pandas as pd
import statsmodels.api as sm
from sklearn.linear_model import LassoCV
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

# Load data
df = pd.read_csv("growthdata_public.csv")

# Define variables (updated based on available columns)
features = [
    "linflation_na", "lrer", "ltraderesid",
    "infrastructure_index", "dum_fincrisis",
    "sd_temperature", "lkg", "sd_growth",
    "lurbanpopresid"
]
target = "lrgdpna_pc"

# Drop missing values
data = df.dropna(subset=features + [target, "period", "country"])

# Compute lagged dependent variable
data["lagged"] = data.groupby("country")[target].shift(1)
data = data.dropna(subset=["lagged"])

# Prepare data for OLS
X = data[["lagged"] + features]
X = sm.add_constant(X)
y = data[target]

# Run OLS Regression
model_ols = sm.OLS(y, X).fit()
print("\n===== OLS Regression Results (Part c) =====")
print(model_ols.summary())

# === Part (d): Lasso Regularized Regression ===
X_no_const = data[["lagged"] + features]
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X_no_const)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
lasso = LassoCV(cv=5, random_state=0)
lasso.fit(X_train, y_train)

# Print coefficients
print("\n===== Lasso Regression Coefficients (Part d) =====")
for name, coef in zip(["lagged"] + features, lasso.coef_):
    print(f"{name:20s}: {coef: .4f}")

# Plot Lasso results
coef_series = pd.Series(lasso.coef_, index=["lagged"] + features)
non_zero_coefs = coef_series[coef_series != 0]
non_zero_coefs.sort_values().plot(kind='barh', figsize=(8,6), title='Lasso Selected Coefficients')
plt.xlabel("Coefficient Value")
plt.tight_layout()
plt.grid(True, axis='x', linestyle='--', alpha=0.6)
plt.savefig("Figure_1.png", dpi=300)
plt.show()

# === Part (e): Norway Growth Decomposition Plot ===
# Contribution values already computed based on coefficients Ã— changes for Norway
norway_factors = {
    "Persistence\n(effect from previous periods)": 4.15,
    "Period dummy": 1.8,
    "Infrastructure": 0.50,
    "Urban population": 0.21,
    "Government spending": 0.08,
    "Growth volatility": 0.12,
    "Inflation": -0.50,
    "Trade openness": -0.04,
    "Other factors (real exch., terms of trade, climate)": -0.12
}

df_figure = pd.DataFrame(list(norway_factors.items()), columns=["Factor", "Contribution"])
colors = ['#4CAF50' if v >= 0 else '#F44336' for v in df_figure["Contribution"]]

plt.figure(figsize=(12, 6))
plt.bar(df_figure["Factor"], df_figure["Contribution"], color=colors)
plt.axhline(0, color='black', linewidth=0.8)
plt.ylabel("Contribution to Growth (% points over 5 years)")
plt.title("Figure: Growth Contributions for Norway (Period 8 to 9)")
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.savefig("Figure_Norway.png", dpi=300)
plt.show()
